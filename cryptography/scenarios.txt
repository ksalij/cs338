Kiri Salij
6 October 2023
I talked about this with Lysander Miller, but we wrote our own reports. 

------------- Simple Communication Scenarios --------------
1. Alice wants to send Bob a long message, and she doesn't want Eve to be able to read it. Assume for this scenario that AITM is impossible.
    Alice and Bob use Diffie-Hellman to get a shared secret K (AITM is impossible). Alice sends Bob AES(K,M), which Bob can decrypt AES_D(K,C) to get M. Eve cannot read the message because she does not have the key. 

2. Alice wants to send Bob a long message. She doesn't want Mal to be able to modify the message without Bob detecting the change.
    We want to create a digital signature so that we can tell if Mal has modified the message. First Alice hashes the message M. Then she encrypts H(M) using her secret key S_A. She sends M || E(S_A, H(M)) to Bob. Bob recieves this information and can also compute H(M) and decrpyt the signature with Alice's public key. If H(M) != E(P_A, H(M)), then the message has been tapered with. In this scenario, we do not care whether Mal can read the message, only that it hasn't been modified. This solution is under the assumption that Alice's secret key is secret and her public key is correct, which is why it works because only she can encrypt the signature, so Bob knows its from her.

3. Alice wants to send Bob a long message (in this case, it's a signed contract between AliceCom and BobCom), she doesn't want Eve to be able to read it, and she wants Bob to have confidence that it was Alice who sent the message. Assume for this scenario that AITM is impossible.
    1. Use Diffie-Hellman to get a shared key K
    2. Alice sends Bob the same thing from question 2: the message M concatenated with a signature, but this time also encrypted with AES. So she sends: AES(K, (M || E(S_A, H(M)))) = C
    3. Bob decrypts the cipher, AES_D(K, C). He now has M || sig. He can decrypt the signature with Alice's public key to get the hash of M. E(P_A, sig) = H(M). He can compute H(M) himself to check that it equals the output of decrypting the signature.
    Once again we assume that no one else has Alice's secret key, thus she is the only one who could have encrypted the signature. Eve cannot read the message because it is encrypted with AES and a secret shared key that only Alice and Bob have. (no AITM attack)

------------- Questions about Breaking Security --------------
4. Consider scenario #3 above. Suppose Bob sues Alice for breach of contract and presents as evidence: the digitally signed contract (C || Sig) and Alice's public key P_A. Suppose Alice says in court "C is not the contract I sent to Bob". (This is known as repudiation in cryptographic vocabulary.) Alice will now need to explain to the court what she believes happened that enabled Bob to end up with an erroneous contract. List at least three things Alice could claim happened. For each of Alice's claims, state briefly how plausible you would find the claim if you were the judge. (Assume that you, the judge, studied cryptography in college.)
    1. Alice could claim that someone had stolen her private key and used it to modifiy and reencrypt the contract Alice sent to Bob (and also was an AITM to obtain the message and get the key for AES). That is, someone intercepted the communication from Alice to Bob (obtaining the DH key and stealing S_A), they had been just passing along the messages until Alice signed the contract. Mal then edits the contract so that Bob recieves a faulty contract. This is not entirely implausible if she had a security leak of some kind, but she would need to provide evidence of that. Also, Bob would presumably notice that this wasn't the contract they agreed upon (unless Mal had made sure only Bob saw one type of contract will Alice saw another). A lot needs to happen for this scenario to play out in this way.
    2. If this was a contract, presumably Bob had sent it it Alice to sign before she sent it back with her signature. Someone could have intercepted it from Bob to Alice and modified it there, so Alice wants to call the contract void because what she signed was not the contract that Bob sent (aka not what was previously agreed upon). This is somewhat plausible, because an AITM could have modified the contract, but Alice should have checked that the hash of the message/contract she recieved was the same as H(M) in the signature before she signed the contract. She also should have carefully read the contract before signing, but also Bob should have also checked that Alice signed the right contract. There are many holes in this story, and this is somewhat similar to the previous one, but Mal does not have S_A.
    3. Alice could claim that someone broke into her house and stole her computer. So the entire time Bob had been communicating with Mal instead. Once again, she would need to provide strong evidence of this. 

5. For this scenario, suppose the assumption that everybody has everybody else's correct public keys is no longer true. Instead, suppose we now have a certificate authority CA, and that everybody has the correct P_CA (i.e. the certificate authority's key). Suppose further that Bob sent his public key P_B to CA, and that CA then delivered to Bob this certificate:
        Cert_B = "bob.com" || P_B || Sig_CA
In terms of P_CA, S_CA, H, E, etc., of what would Sig_CA consist? That is, show the formula CA would use to compute Sig_CA.
    Sig_CA = E(S_CA, H("bob.com" || P_B))

6. Bob now has the certificate Cert_B from the previous question. During a communication, Bob sends Alice Cert_B. Is that enough for Alice to believe she's talking to Bob? (Hint: no.) What could Alice and Bob do to convince Alice that Bob has the S_B that goes with the P_B in Cert_B?
    Just sending Cert_B is not enough for Alice to belive that she is talking to Bob because anyone could likely obtain his certificate from bob.com. However, he can send Cert_B || E(S_B, H(Cert_B)). Alice can take Bob's public key from Cert_B and use it to decrypt the second part. E(P_B, E(S_A, H(Cert_B))) = H(Cert_B), if the hash that Alice calculates with the unencypted Cert_B is the same as the H(Cert_B), then Bob is who he says he is. 

7. Finally, list at least two ways this certificate-based trust system could be subverted, allowing Mal to convince Alice that Mal is Bob.
    1. We are assuming that the certification authority is trustworthy, so if someone infiltrates the CA and creates a certificate saying that Mal is Bob. This means that anyone wanting to contact Bob would contact Mal instead. In practice, the CA seems very careful about preserving the trust people have in them, so I'm sure their security is very strong. 
    2. Mal convinces the certification authority that Mal is Bob. I'm not sure how plausible this is, but depending on how the CA issues these certificates Mal could trick them. I'm thinking especially about the case where multiple people have access to modifying a website (ex. bob.com). Bob (the owner) might give Mal access to the site without knowing that they are a malicious person. Mal then could apply for a certificate for bob.com with a public key that goes to a private key that Mal owns, and if the CA asks for the website to be modified to prove that Mal owns bob.com, then Mal can do that and steal the website away from Bob because anyone wanting to talk to bob.com goes to Mal instead of Bob.